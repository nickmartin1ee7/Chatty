name: Android CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3      
      - name: Print Directory Structure
        shell: pwsh
        run: |
          Get-ChildItem -Recurse      
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - uses: actions/setup-java@v2
        with:
          distribution: 'microsoft'
          java-version: '11'
      - name: Install MAUI Workloads
        run: |
          dotnet workload install android --ignore-failed-sources
          dotnet workload install maui --ignore-failed-sources
      - name: Restore dependencies
        run: nuget restore

  android-build:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Get AndroidManifest.xml
        id: get-manifest
        run: |
          $manifestPath = (Get-ChildItem -Path . -Filter AndroidManifest.xml -Recurse -ErrorAction SilentlyContinue -Force | Select-Object -First 1).FullName
          echo "::set-output name=manifestPath::$manifestPath"
      - name: Set Android version
        run: |
          $manifestPath = "${{ steps.get-manifest.outputs.manifestPath }}"
          $versionName = "${{ env.APP_VERSION }}.${{ github.run_number }}"
          $versionCode = "${{ github.run_number }}"

          # Read the AndroidManifest.xml file
          $manifestContent = Get-Content -Path $manifestPath

          # Find and replace the version-name
          $manifestContent = $manifestContent -replace '(?<=version-name=")[^"]+', $versionName

          # Find and replace the version-code
          $manifestContent = $manifestContent -replace '(?<=versionCode=")[^"]+', $versionCode

          # Write the modified content back to the AndroidManifest.xml file
          $manifestContent | Set-Content -Path $manifestPath

          # Set the output variables
          Write-Host "::set-output name=versionName::$versionName"
          Write-Host "::set-output name=versionCode::$versionCode"

      - name: Publish
        run: dotnet publish ./ChattyApp/ChattyApp.csproj -f net6.0-android -c Release --no-restore
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          path: "**/Release/*.apk"

  create-release:
    needs: android-build
    runs-on: windows-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.workflow }}
          name: Chatty v${{ vars.APP_VERSION }}.${{ github.run_number }}
          draft: false
          prerelease: false
          files: "**/Release/*.apk"
